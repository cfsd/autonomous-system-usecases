# This is a basic .yml file for CFSD19
# it includes ZED camera, velodyne16 and ellipse2n interface, data recording microservices
version: '2'

services: 
    # the image label "latest" here is not the lastest on the Dockerhub
    # the image:lastest here is the one already downloaded on the PC
    # can be forced to download the latest from the Dockerhub  
    recorder219:
       image: chrberger/cluon-amd64:latest
       network_mode: "host"
       volumes:
       - ./recordings219cluon:/opt/recordings
       working_dir: "/opt/recordings"
       command: sh -c "cluon-OD4toStdout --cid=219 > `date +CID-219-recording-%Y-%m-%d_%H%M%S.rec`"

    recorder48:
       image: chrberger/cluon-amd64:latest
       network_mode: "host"
       volumes:
       - ./recordings48cluon:/opt/recordings
       working_dir: "/opt/recordings"
       command: sh -c "cluon-OD4toStdout --cid=48 > `date +CID-48-recording-%Y-%m-%d_%H%M%S.rec`"

    video-h264-encoder-amd64:
        build:
            context: https://github.com/chalmers-revere/opendlv-video-h264-encoder.git
            dockerfile: Dockerfile.amd64
        restart: on-failure
        network_mode: "host"
        ipc: "host"
        volumes:
        - /tmp:/tmp
        command: "--cid=48 --name=video0.i420 --width=1344 --height=376"

    # currently, the PC on the car does not connect to a graphic card
    # instead, run this microservice on another laptop within the same network
    opendlv-vehicle-view:
        image: chalmersrevere/opendlv-vehicle-view-multi:v0.0.44
        restart: on-failure
        network_mode: "host"
        volumes:
        -./recordings:/opt/vehicle-view/recordings
        - /var/run/docker.sock:/var/run/docker.sock
        ports:
        - "8081:8081"

    # TODO:test on the ZED camera
    # - adjust the width, height and freq
    proxy-camera:
       image: chalmersrevere/opendlv-device-camera-v4l-multi:v0.0.6
       network_mode: host
       group_add:
           - video
       ipc: host
       user: root
       devices:
           - "/dev/video0:/dev/video0"
       environment:
           - DISPLAY=$DISPLAY
       volumes:
           - /tmp/.X11-unix:/tmp/.X11-unix
           - /tmp:/tmp
       command: "--camera=/dev/video0 --width=1344 --height=376 --freq=15"

    proxy-velodyne16:
        image: chalmersrevere/opendlv-device-lidar-vlp16-multi:v0.0.9
        network_mode: "host"
        volumes:
            - .:/opt/opendlv.data
        working_dir: "/opt/opendlv.data"
        command: "opendlv-device-lidar-vlp16 --vlp16_ip=0.0.0.0 --vlp16_port=2368 --cid=48"

    #proxy-ellipse2n
    #image need to be built locally
    #this used image is already on the PC
    #the source code is on the drive
    opendlv-proxy-ellipse2n:
        image: proxy-imu:local
        network_mode: "host"
        devices:
            - "/dev/ttyUSB0:/dev/ttyUSB0"
        command: "opendlv-proxy-ellipse2n --cid=48 --id=112 --idRawData=108"
